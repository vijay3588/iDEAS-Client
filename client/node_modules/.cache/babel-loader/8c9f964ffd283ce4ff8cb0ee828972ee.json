{"ast":null,"code":"import { ADD_DOCCATEGORY, CHANGE_DOCCATEGORY_PENDING_EDIT, EDIT_DOCCATEGORY, REMOVE_DOCCATEGORY, CLEAR_DOCCATEGORY_PENDING_EDIT, SET_DOCCATEGORY_MODIFICATION_STATE, CHANGE_DOCCATEGORY_AMOUNT, LIST_DOCCATEGORY } from \"../actions/doccategory.action\";\nimport { DocCategoryModificationStatus } from \"../models/doccategory.interface\";\nconst initialState = {\n  modificationState: DocCategoryModificationStatus.None,\n  selectedDocCategory: null,\n  docCategories: []\n};\nfunction docCategoriesReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case LIST_DOCCATEGORY:\n      {\n        return {\n          ...state,\n          docCategories: action.docCategories\n        };\n      }\n    case ADD_DOCCATEGORY:\n      {\n        //  let maxId: number = Math.max.apply(Math, state.docCategories.map(function(o) { return o._id; }));\n        //  action.product.id = maxId + 1; \n        return {\n          ...state,\n          docCategories: [...state.docCategories, action.docCategory]\n        };\n      }\n    case EDIT_DOCCATEGORY:\n      {\n        const foundIndex = state.docCategories.findIndex(pr => pr._id === action.docCategory._id);\n        let docCategories = state.docCategories;\n        docCategories[foundIndex] = action.docCategory;\n        return {\n          ...state,\n          docCategories: docCategories\n        };\n      }\n    case REMOVE_DOCCATEGORY:\n      {\n        return {\n          ...state,\n          docCategories: state.docCategories.filter(pr => pr._id !== action.id)\n        };\n      }\n    case CHANGE_DOCCATEGORY_PENDING_EDIT:\n      {\n        console.log(\"state-----\", state, action);\n        return {\n          ...state,\n          selectedDocCategory: action.docCategory\n        };\n      }\n    case CLEAR_DOCCATEGORY_PENDING_EDIT:\n      {\n        return {\n          ...state,\n          selectedDocCategory: null\n        };\n      }\n    case SET_DOCCATEGORY_MODIFICATION_STATE:\n      {\n        return {\n          ...state,\n          modificationState: action.value\n        };\n      }\n    case CHANGE_DOCCATEGORY_AMOUNT:\n      {\n        //const foundIndex: number = state.docCategories.findIndex(pr => pr._id === action.id);\n        let docCategories = state.docCategories;\n        return {\n          ...state,\n          docCategories: docCategories\n        };\n      }\n    default:\n      return state;\n  }\n}\nexport default docCategoriesReducer;","map":{"version":3,"names":["ADD_DOCCATEGORY","CHANGE_DOCCATEGORY_PENDING_EDIT","EDIT_DOCCATEGORY","REMOVE_DOCCATEGORY","CLEAR_DOCCATEGORY_PENDING_EDIT","SET_DOCCATEGORY_MODIFICATION_STATE","CHANGE_DOCCATEGORY_AMOUNT","LIST_DOCCATEGORY","DocCategoryModificationStatus","initialState","modificationState","None","selectedDocCategory","docCategories","docCategoriesReducer","state","arguments","length","undefined","action","type","docCategory","foundIndex","findIndex","pr","_id","filter","id","console","log","value"],"sources":["C:/iDASnew/client/src/store/reducers/doccategory.reducer.ts"],"sourcesContent":["import { IDocCategoryState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_DOCCATEGORY, CHANGE_DOCCATEGORY_PENDING_EDIT, EDIT_DOCCATEGORY, REMOVE_DOCCATEGORY,\r\n    CLEAR_DOCCATEGORY_PENDING_EDIT, SET_DOCCATEGORY_MODIFICATION_STATE, CHANGE_DOCCATEGORY_AMOUNT, LIST_DOCCATEGORY} from \"../actions/doccategory.action\";\r\nimport { IDocCategory, DocCategoryModificationStatus } from \"../models/doccategory.interface\";\r\n\r\n\r\n\r\nconst initialState: IDocCategoryState = {\r\n    modificationState: DocCategoryModificationStatus.None,\r\n    selectedDocCategory: null,\r\n    docCategories: []\r\n};\r\n\r\nfunction docCategoriesReducer(state: IDocCategoryState = initialState, action: IActionBase): IDocCategoryState {\r\n    switch (action.type) {         \r\n        case LIST_DOCCATEGORY: { \r\n            return { ...state, docCategories:  action.docCategories};\r\n        }        \r\n        case ADD_DOCCATEGORY: {\r\n          //  let maxId: number = Math.max.apply(Math, state.docCategories.map(function(o) { return o._id; }));\r\n          //  action.product.id = maxId + 1; \r\n            return { ...state, docCategories: [...state.docCategories, action.docCategory]};\r\n        }\r\n        case EDIT_DOCCATEGORY: {\r\n            const foundIndex: number = state.docCategories.findIndex(pr => pr._id === action.docCategory._id);\r\n            let docCategories: IDocCategory[] = state.docCategories;\r\n            docCategories[foundIndex] = action.docCategory;\r\n            return { ...state, docCategories: docCategories };\r\n        }\r\n        case REMOVE_DOCCATEGORY: {\r\n            return { ...state, docCategories: state.docCategories.filter(pr => pr._id !== action.id) };\r\n        }\r\n        case CHANGE_DOCCATEGORY_PENDING_EDIT: {\r\n            console.log(\"state-----\", state, action);\r\n            return { ...state, selectedDocCategory: action.docCategory };\r\n        }\r\n        case CLEAR_DOCCATEGORY_PENDING_EDIT: {\r\n            return { ...state, selectedDocCategory: null };\r\n        }\r\n        case SET_DOCCATEGORY_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        case CHANGE_DOCCATEGORY_AMOUNT: {\r\n            //const foundIndex: number = state.docCategories.findIndex(pr => pr._id === action.id);\r\n            let docCategories: IDocCategory[] = state.docCategories;\r\n            return { ...state, docCategories: docCategories };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default docCategoriesReducer;"],"mappings":"AACA,SAASA,eAAe,EAAEC,+BAA+B,EAAEC,gBAAgB,EAAEC,kBAAkB,EAC3FC,8BAA8B,EAAEC,kCAAkC,EAAEC,yBAAyB,EAAEC,gBAAgB,QAAO,+BAA+B;AACzJ,SAAuBC,6BAA6B,QAAQ,iCAAiC;AAI7F,MAAMC,YAA+B,GAAG;EACpCC,iBAAiB,EAAEF,6BAA6B,CAACG,IAAI;EACrDC,mBAAmB,EAAE,IAAI;EACzBC,aAAa,EAAE;AACnB,CAAC;AAED,SAASC,oBAAoBA,CAAA,EAAkF;EAAA,IAAjFC,KAAwB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGP,YAAY;EAAA,IAAEU,MAAmB,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACtF,QAAQC,MAAM,CAACC,IAAI;IACf,KAAKb,gBAAgB;MAAE;QACnB,OAAO;UAAE,GAAGQ,KAAK;UAAEF,aAAa,EAAGM,MAAM,CAACN;QAAa,CAAC;MAC5D;IACA,KAAKb,eAAe;MAAE;QACpB;QACA;QACE,OAAO;UAAE,GAAGe,KAAK;UAAEF,aAAa,EAAE,CAAC,GAAGE,KAAK,CAACF,aAAa,EAAEM,MAAM,CAACE,WAAW;QAAC,CAAC;MACnF;IACA,KAAKnB,gBAAgB;MAAE;QACnB,MAAMoB,UAAkB,GAAGP,KAAK,CAACF,aAAa,CAACU,SAAS,CAACC,EAAE,IAAIA,EAAE,CAACC,GAAG,KAAKN,MAAM,CAACE,WAAW,CAACI,GAAG,CAAC;QACjG,IAAIZ,aAA6B,GAAGE,KAAK,CAACF,aAAa;QACvDA,aAAa,CAACS,UAAU,CAAC,GAAGH,MAAM,CAACE,WAAW;QAC9C,OAAO;UAAE,GAAGN,KAAK;UAAEF,aAAa,EAAEA;QAAc,CAAC;MACrD;IACA,KAAKV,kBAAkB;MAAE;QACrB,OAAO;UAAE,GAAGY,KAAK;UAAEF,aAAa,EAAEE,KAAK,CAACF,aAAa,CAACa,MAAM,CAACF,EAAE,IAAIA,EAAE,CAACC,GAAG,KAAKN,MAAM,CAACQ,EAAE;QAAE,CAAC;MAC9F;IACA,KAAK1B,+BAA+B;MAAE;QAClC2B,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEd,KAAK,EAAEI,MAAM,CAAC;QACxC,OAAO;UAAE,GAAGJ,KAAK;UAAEH,mBAAmB,EAAEO,MAAM,CAACE;QAAY,CAAC;MAChE;IACA,KAAKjB,8BAA8B;MAAE;QACjC,OAAO;UAAE,GAAGW,KAAK;UAAEH,mBAAmB,EAAE;QAAK,CAAC;MAClD;IACA,KAAKP,kCAAkC;MAAE;QACrC,OAAO;UAAE,GAAGU,KAAK;UAAEL,iBAAiB,EAAES,MAAM,CAACW;QAAM,CAAC;MACxD;IACA,KAAKxB,yBAAyB;MAAE;QAC5B;QACA,IAAIO,aAA6B,GAAGE,KAAK,CAACF,aAAa;QACvD,OAAO;UAAE,GAAGE,KAAK;UAAEF,aAAa,EAAEA;QAAc,CAAC;MACrD;IACA;MACI,OAAOE,KAAK;EACpB;AACJ;AAGA,eAAeD,oBAAoB"},"metadata":{},"sourceType":"module"}