{"ast":null,"code":"export const ADD_NOTIFICATION = \"ADD_NOTIFICATION\";\nexport const REMOVE_NOTIFICATION = \"REMOVE_NOTIFICATION\";\nexport function addNotification(title, text) {\n  return {\n    type: ADD_NOTIFICATION,\n    text: text,\n    title: title\n  };\n}\nexport function removeNotification(id) {\n  return {\n    type: REMOVE_NOTIFICATION,\n    id: id\n  };\n}\nexport function parseApiResult(result) {\n  const {\n    message = \"\",\n    data: {\n      user = {}\n    }\n  } = result;\n  let titleMesage = '';\n  let bodyMessage = '';\n  const processMassage = message ? message : result.data.message;\n  switch (processMassage) {\n    case \"LOGIN.ERROR\":\n      if (result.data.message && result.data.message === \"LOGIN.LOGIN_NOT_ACTIVATED\") {\n        bodyMessage = \"account not activated\";\n        titleMesage = \"Contact Administrator\";\n      } else {\n        bodyMessage = \"account not registered properly\";\n        titleMesage = \"Failed\";\n      }\n      break;\n    case \"LOGIN.SUCCESS\":\n      titleMesage = `Hello ${user.name} `;\n      bodyMessage = `Welcome`;\n      break;\n    default:\n      titleMesage = \"\";\n      break;\n  }\n  return {\n    titleMesage,\n    bodyMessage\n  };\n}\n;\n;","map":{"version":3,"names":["ADD_NOTIFICATION","REMOVE_NOTIFICATION","addNotification","title","text","type","removeNotification","id","parseApiResult","result","message","data","user","titleMesage","bodyMessage","processMassage","name"],"sources":["C:/iDASnew/client/src/store/actions/notifications.action.ts"],"sourcesContent":["export const ADD_NOTIFICATION: string = \"ADD_NOTIFICATION\";\r\nexport const REMOVE_NOTIFICATION: string = \"REMOVE_NOTIFICATION\";\r\n\r\nexport function addNotification(title: string, text: string): IAddNotificationActionType { \r\n    return { type: ADD_NOTIFICATION, text: text, title: title };\r\n}\r\n\r\nexport function removeNotification(id: number): IRemoveNotificationActionType {\r\n    return { type: REMOVE_NOTIFICATION, id: id };\r\n}\r\nexport function parseApiResult(result: any) {\r\n    const {message=\"\", data:{ user={}}}  = result; \r\n    let titleMesage = '';\r\n    let bodyMessage = ''; \r\n    const processMassage = message ? message : result.data.message;\r\n    switch (processMassage){\r\n        case \"LOGIN.ERROR\":\r\n            if(result.data.message && result.data.message === \"LOGIN.LOGIN_NOT_ACTIVATED\"){\r\n                bodyMessage = \"account not activated\";\r\n                titleMesage = \"Contact Administrator\";\r\n            }else{\r\n                bodyMessage = \"account not registered properly\";\r\n                titleMesage = \"Failed\";\r\n            }\r\n            \r\n           \r\n            break;\r\n        case \"LOGIN.SUCCESS\": \r\n            titleMesage =  `Hello ${user.name} `;\r\n            bodyMessage =  `Welcome`;\r\n            break;\r\n        default:\r\n            titleMesage =\"\";\r\n            break;\r\n\r\n    } \r\n    return {titleMesage, bodyMessage};\r\n\r\n   \r\n}\r\n\r\ninterface IAddNotificationActionType { type: string, text: string, title: string };\r\ninterface IRemoveNotificationActionType { type: string, id: number };\r\n"],"mappings":"AAAA,OAAO,MAAMA,gBAAwB,GAAG,kBAAkB;AAC1D,OAAO,MAAMC,mBAA2B,GAAG,qBAAqB;AAEhE,OAAO,SAASC,eAAeA,CAACC,KAAa,EAAEC,IAAY,EAA8B;EACrF,OAAO;IAAEC,IAAI,EAAEL,gBAAgB;IAAEI,IAAI,EAAEA,IAAI;IAAED,KAAK,EAAEA;EAAM,CAAC;AAC/D;AAEA,OAAO,SAASG,kBAAkBA,CAACC,EAAU,EAAiC;EAC1E,OAAO;IAAEF,IAAI,EAAEJ,mBAAmB;IAAEM,EAAE,EAAEA;EAAG,CAAC;AAChD;AACA,OAAO,SAASC,cAAcA,CAACC,MAAW,EAAE;EACxC,MAAM;IAACC,OAAO,GAAC,EAAE;IAAEC,IAAI,EAAC;MAAEC,IAAI,GAAC,CAAC;IAAC;EAAC,CAAC,GAAIH,MAAM;EAC7C,IAAII,WAAW,GAAG,EAAE;EACpB,IAAIC,WAAW,GAAG,EAAE;EACpB,MAAMC,cAAc,GAAGL,OAAO,GAAGA,OAAO,GAAGD,MAAM,CAACE,IAAI,CAACD,OAAO;EAC9D,QAAQK,cAAc;IAClB,KAAK,aAAa;MACd,IAAGN,MAAM,CAACE,IAAI,CAACD,OAAO,IAAID,MAAM,CAACE,IAAI,CAACD,OAAO,KAAK,2BAA2B,EAAC;QAC1EI,WAAW,GAAG,uBAAuB;QACrCD,WAAW,GAAG,uBAAuB;MACzC,CAAC,MAAI;QACDC,WAAW,GAAG,iCAAiC;QAC/CD,WAAW,GAAG,QAAQ;MAC1B;MAGA;IACJ,KAAK,eAAe;MAChBA,WAAW,GAAK,SAAQD,IAAI,CAACI,IAAK,GAAE;MACpCF,WAAW,GAAK,SAAQ;MACxB;IACJ;MACID,WAAW,GAAE,EAAE;MACf;EAER;EACA,OAAO;IAACA,WAAW;IAAEC;EAAW,CAAC;AAGrC;AAEkF;AACd"},"metadata":{},"sourceType":"module"}