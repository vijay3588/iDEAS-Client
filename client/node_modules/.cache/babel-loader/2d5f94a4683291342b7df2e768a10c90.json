{"ast":null,"code":"import { ADD_DOCREQUEST, CHANGE_DOCREQUEST_PENDING_EDIT, EDIT_DOCREQUEST, REMOVE_DOCREQUEST, CLEAR_DOCREQUEST_PENDING_EDIT, SET_DOCREQUEST_MODIFICATION_STATE, CHANGE_DOCREQUEST_AMOUNT, LIST_DOCREQUEST } from \"../actions/docrequest.action\";\nimport { DocRequestModificationStatus } from \"../models/docrequest.interface\";\nconst initialState = {\n  modificationState: DocRequestModificationStatus.None,\n  selectedDocRequest: null,\n  docRequests: []\n};\nfunction docRequestsReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case LIST_DOCREQUEST:\n      {\n        return {\n          ...state,\n          docRequests: action.docRequests\n        };\n      }\n    case ADD_DOCREQUEST:\n      {\n        //  let maxId: number = Math.max.apply(Math, state.docRequests.map(function(o) { return o._id; }));\n        //  action.product.id = maxId + 1;  \n        return {\n          ...state,\n          docRequests: [...state.docRequests, action.docRequest]\n        };\n      }\n    case EDIT_DOCREQUEST:\n      {\n        const foundIndex = state.docRequests.findIndex(pr => pr._id === action.docCategory._id);\n        let docRequests = state.docRequests;\n        docRequests[foundIndex] = action.docCategory;\n        return {\n          ...state,\n          docRequests: docRequests\n        };\n      }\n    case REMOVE_DOCREQUEST:\n      {\n        return {\n          ...state,\n          docRequests: state.docRequests.filter(pr => pr._id !== action.id)\n        };\n      }\n    case CHANGE_DOCREQUEST_PENDING_EDIT:\n      {\n        return {\n          ...state,\n          selectedDocRequest: action.docCategory\n        };\n      }\n    case CLEAR_DOCREQUEST_PENDING_EDIT:\n      {\n        return {\n          ...state,\n          selectedDocRequest: null\n        };\n      }\n    case SET_DOCREQUEST_MODIFICATION_STATE:\n      {\n        return {\n          ...state,\n          modificationState: action.value\n        };\n      }\n    case CHANGE_DOCREQUEST_AMOUNT:\n      {\n        //const foundIndex: number = state.docRequests.findIndex(pr => pr._id === action.id);\n        let docRequests = state.docRequests;\n        return {\n          ...state,\n          docRequests: docRequests\n        };\n      }\n    default:\n      return state;\n  }\n}\nexport default docRequestsReducer;","map":{"version":3,"names":["ADD_DOCREQUEST","CHANGE_DOCREQUEST_PENDING_EDIT","EDIT_DOCREQUEST","REMOVE_DOCREQUEST","CLEAR_DOCREQUEST_PENDING_EDIT","SET_DOCREQUEST_MODIFICATION_STATE","CHANGE_DOCREQUEST_AMOUNT","LIST_DOCREQUEST","DocRequestModificationStatus","initialState","modificationState","None","selectedDocRequest","docRequests","docRequestsReducer","state","arguments","length","undefined","action","type","docRequest","foundIndex","findIndex","pr","_id","docCategory","filter","id","value"],"sources":["C:/iDASnew/client/src/store/reducers/docrequest.reducer.ts"],"sourcesContent":["import { IDocRequestState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_DOCREQUEST, CHANGE_DOCREQUEST_PENDING_EDIT, EDIT_DOCREQUEST, REMOVE_DOCREQUEST,\r\n    CLEAR_DOCREQUEST_PENDING_EDIT, SET_DOCREQUEST_MODIFICATION_STATE, CHANGE_DOCREQUEST_AMOUNT, LIST_DOCREQUEST} from \"../actions/docrequest.action\";\r\nimport { IDocRequest, DocRequestModificationStatus } from \"../models/docrequest.interface\";\r\n\r\n\r\n\r\nconst initialState: IDocRequestState = {\r\n    modificationState: DocRequestModificationStatus.None,\r\n    selectedDocRequest: null,\r\n    docRequests: []\r\n};\r\n\r\nfunction docRequestsReducer(state: IDocRequestState = initialState, action: IActionBase): IDocRequestState {\r\n    switch (action.type) {         \r\n        case LIST_DOCREQUEST: { \r\n            return { ...state, docRequests:  action.docRequests};\r\n        }        \r\n        case ADD_DOCREQUEST: {\r\n          //  let maxId: number = Math.max.apply(Math, state.docRequests.map(function(o) { return o._id; }));\r\n          //  action.product.id = maxId + 1;  \r\n            return { ...state, docRequests: [...state.docRequests, action.docRequest]};\r\n        }\r\n        case EDIT_DOCREQUEST: {\r\n            const foundIndex: number = state.docRequests.findIndex(pr => pr._id === action.docCategory._id);\r\n            let docRequests: IDocRequest[] = state.docRequests;\r\n            docRequests[foundIndex] = action.docCategory;\r\n            return { ...state, docRequests: docRequests };\r\n        }\r\n        case REMOVE_DOCREQUEST: {\r\n            return { ...state, docRequests: state.docRequests.filter(pr => pr._id !== action.id) };\r\n        }\r\n        case CHANGE_DOCREQUEST_PENDING_EDIT: {\r\n            return { ...state, selectedDocRequest: action.docCategory };\r\n        }\r\n        case CLEAR_DOCREQUEST_PENDING_EDIT: {\r\n            return { ...state, selectedDocRequest: null };\r\n        }\r\n        case SET_DOCREQUEST_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        case CHANGE_DOCREQUEST_AMOUNT: {\r\n            //const foundIndex: number = state.docRequests.findIndex(pr => pr._id === action.id);\r\n            let docRequests: IDocRequest[] = state.docRequests;\r\n            return { ...state, docRequests: docRequests };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default docRequestsReducer;"],"mappings":"AACA,SAASA,cAAc,EAAEC,8BAA8B,EAAEC,eAAe,EAAEC,iBAAiB,EACvFC,6BAA6B,EAAEC,iCAAiC,EAAEC,wBAAwB,EAAEC,eAAe,QAAO,8BAA8B;AACpJ,SAAsBC,4BAA4B,QAAQ,gCAAgC;AAI1F,MAAMC,YAA8B,GAAG;EACnCC,iBAAiB,EAAEF,4BAA4B,CAACG,IAAI;EACpDC,kBAAkB,EAAE,IAAI;EACxBC,WAAW,EAAE;AACjB,CAAC;AAED,SAASC,kBAAkBA,CAAA,EAAgF;EAAA,IAA/EC,KAAuB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGP,YAAY;EAAA,IAAEU,MAAmB,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACnF,QAAQC,MAAM,CAACC,IAAI;IACf,KAAKb,eAAe;MAAE;QAClB,OAAO;UAAE,GAAGQ,KAAK;UAAEF,WAAW,EAAGM,MAAM,CAACN;QAAW,CAAC;MACxD;IACA,KAAKb,cAAc;MAAE;QACnB;QACA;QACE,OAAO;UAAE,GAAGe,KAAK;UAAEF,WAAW,EAAE,CAAC,GAAGE,KAAK,CAACF,WAAW,EAAEM,MAAM,CAACE,UAAU;QAAC,CAAC;MAC9E;IACA,KAAKnB,eAAe;MAAE;QAClB,MAAMoB,UAAkB,GAAGP,KAAK,CAACF,WAAW,CAACU,SAAS,CAACC,EAAE,IAAIA,EAAE,CAACC,GAAG,KAAKN,MAAM,CAACO,WAAW,CAACD,GAAG,CAAC;QAC/F,IAAIZ,WAA0B,GAAGE,KAAK,CAACF,WAAW;QAClDA,WAAW,CAACS,UAAU,CAAC,GAAGH,MAAM,CAACO,WAAW;QAC5C,OAAO;UAAE,GAAGX,KAAK;UAAEF,WAAW,EAAEA;QAAY,CAAC;MACjD;IACA,KAAKV,iBAAiB;MAAE;QACpB,OAAO;UAAE,GAAGY,KAAK;UAAEF,WAAW,EAAEE,KAAK,CAACF,WAAW,CAACc,MAAM,CAACH,EAAE,IAAIA,EAAE,CAACC,GAAG,KAAKN,MAAM,CAACS,EAAE;QAAE,CAAC;MAC1F;IACA,KAAK3B,8BAA8B;MAAE;QACjC,OAAO;UAAE,GAAGc,KAAK;UAAEH,kBAAkB,EAAEO,MAAM,CAACO;QAAY,CAAC;MAC/D;IACA,KAAKtB,6BAA6B;MAAE;QAChC,OAAO;UAAE,GAAGW,KAAK;UAAEH,kBAAkB,EAAE;QAAK,CAAC;MACjD;IACA,KAAKP,iCAAiC;MAAE;QACpC,OAAO;UAAE,GAAGU,KAAK;UAAEL,iBAAiB,EAAES,MAAM,CAACU;QAAM,CAAC;MACxD;IACA,KAAKvB,wBAAwB;MAAE;QAC3B;QACA,IAAIO,WAA0B,GAAGE,KAAK,CAACF,WAAW;QAClD,OAAO;UAAE,GAAGE,KAAK;UAAEF,WAAW,EAAEA;QAAY,CAAC;MACjD;IACA;MACI,OAAOE,KAAK;EACpB;AACJ;AAGA,eAAeD,kBAAkB"},"metadata":{},"sourceType":"module"}