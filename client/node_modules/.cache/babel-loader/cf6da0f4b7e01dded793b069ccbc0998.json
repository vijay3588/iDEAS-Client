{"ast":null,"code":"import { ADD_NOTIFICATION, REMOVE_NOTIFICATION } from \"../actions/notifications.action\";\nconst initialState = {\n  notifications: [] //{id: 1, date: new Date(), text: \"\", title: \"Welcome\"}.\n};\n\nfunction notificationReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_NOTIFICATION:\n      {\n        let maxId = Math.max.apply(Math, state.notifications.map(o => o.id));\n        if (maxId === -Infinity) {\n          maxId = 0;\n        }\n        let newItem = {\n          id: maxId + 1,\n          date: new Date(),\n          title: action.title,\n          text: action.text\n        };\n        return {\n          ...state,\n          notifications: [...state.notifications, newItem]\n        };\n      }\n    case REMOVE_NOTIFICATION:\n      {\n        return {\n          ...state,\n          notifications: state.notifications.filter(Notification => Notification.id !== action.id)\n        };\n      }\n    default:\n      return state;\n  }\n}\nexport default notificationReducer;","map":{"version":3,"names":["ADD_NOTIFICATION","REMOVE_NOTIFICATION","initialState","notifications","notificationReducer","state","arguments","length","undefined","action","type","maxId","Math","max","apply","map","o","id","Infinity","newItem","date","Date","title","text","filter","Notification"],"sources":["C:/iDASnew/client/src/store/reducers/notification.reducer.ts"],"sourcesContent":["import { IActionBase, INotificationState } from \"../models/root.interface\";\r\nimport { ADD_NOTIFICATION, REMOVE_NOTIFICATION } from \"../actions/notifications.action\";\r\n\r\nconst initialState: INotificationState = {\r\n    notifications: [] //{id: 1, date: new Date(), text: \"\", title: \"Welcome\"}.\r\n};\r\n\r\nfunction notificationReducer(state: INotificationState = initialState, action: IActionBase): INotificationState {\r\n    switch (action.type) {\r\n        case ADD_NOTIFICATION: { \r\n            let maxId: number= Math.max.apply(Math, state.notifications.map(o =>  o.id));\r\n            if(maxId === -Infinity) { maxId = 0; }\r\n            let newItem = {\r\n                id: maxId + 1,\r\n                date: new Date(),\r\n                title: action.title,\r\n                text: action.text\r\n            }; \r\n            return {...state, notifications: [...state.notifications, newItem]};\r\n        }\r\n        case REMOVE_NOTIFICATION: {\r\n            return {...state, notifications: state.notifications\r\n                .filter(Notification => Notification.id !== action.id)};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default notificationReducer;"],"mappings":"AACA,SAASA,gBAAgB,EAAEC,mBAAmB,QAAQ,iCAAiC;AAEvF,MAAMC,YAAgC,GAAG;EACrCC,aAAa,EAAE,EAAE,CAAC;AACtB,CAAC;;AAED,SAASC,mBAAmBA,CAAA,EAAoF;EAAA,IAAnFC,KAAyB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGJ,YAAY;EAAA,IAAEO,MAAmB,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACtF,QAAQC,MAAM,CAACC,IAAI;IACf,KAAKV,gBAAgB;MAAE;QACnB,IAAIW,KAAa,GAAEC,IAAI,CAACC,GAAG,CAACC,KAAK,CAACF,IAAI,EAAEP,KAAK,CAACF,aAAa,CAACY,GAAG,CAACC,CAAC,IAAKA,CAAC,CAACC,EAAE,CAAC,CAAC;QAC5E,IAAGN,KAAK,KAAK,CAACO,QAAQ,EAAE;UAAEP,KAAK,GAAG,CAAC;QAAE;QACrC,IAAIQ,OAAO,GAAG;UACVF,EAAE,EAAEN,KAAK,GAAG,CAAC;UACbS,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC;UAChBC,KAAK,EAAEb,MAAM,CAACa,KAAK;UACnBC,IAAI,EAAEd,MAAM,CAACc;QACjB,CAAC;QACD,OAAO;UAAC,GAAGlB,KAAK;UAAEF,aAAa,EAAE,CAAC,GAAGE,KAAK,CAACF,aAAa,EAAEgB,OAAO;QAAC,CAAC;MACvE;IACA,KAAKlB,mBAAmB;MAAE;QACtB,OAAO;UAAC,GAAGI,KAAK;UAAEF,aAAa,EAAEE,KAAK,CAACF,aAAa,CAC/CqB,MAAM,CAACC,YAAY,IAAIA,YAAY,CAACR,EAAE,KAAKR,MAAM,CAACQ,EAAE;QAAC,CAAC;MAC/D;IACA;MACI,OAAOZ,KAAK;EACpB;AACJ;AAGA,eAAeD,mBAAmB"},"metadata":{},"sourceType":"module"}