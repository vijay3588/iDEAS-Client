{"ast":null,"code":"var _jsxFileName = \"C:\\\\iDAS\\\\client\\\\src\\\\common\\\\components\\\\TextAreaInput.tsx\";\nimport React, { useState } from \"react\";\nfunction TextAreaInput(props) {\n  const [touched, setTouch] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [htmlClass, setHtmlClass] = useState(\"\");\n  const [, setValue] = useState(\"\");\n  function onValueChanged(event) {\n    let [error, validClass, elementValue] = [\"\", \"\", event.target.value];\n    const {\n      field\n    } = props;\n    if (field === \"email\") {\n      var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n      [error, validClass] = !pattern.test(elementValue) ? [\"Complete field with proper email\", \"is-invalid\"] : [\"\", \"is-valid\"];\n    } else {\n      [error, validClass] = !elementValue && props.required ? [\"Value cannot be empty\", \"is-invalid\"] : [\"\", \"is-valid\"];\n    }\n    if (!error) {\n      [error, validClass] = props.maxLength && elementValue && elementValue.length > props.maxLength ? [`Value can't have more than ${props.maxLength} characters`, \"is-invalid\"] : [\"\", \"is-valid\"];\n    }\n    props.onChange({\n      value: elementValue,\n      error: error,\n      touched: touched,\n      field: props.field\n    });\n    setTouch(true);\n    setError(error);\n    setHtmlClass(validClass);\n    setValue(elementValue);\n  }\n  const {\n    customError\n  } = props;\n  const diasableField = props.disabled ? true : false;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: props.id.toString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, props.label), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: props.value,\n    onChange: onValueChanged,\n    className: `form-control ${props.inputClass} ${htmlClass}`,\n    id: `id_${props.label}`,\n    placeholder: props.placeholder,\n    disabled: diasableField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), !customError && error ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, error) : null, !error && customError ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, customError) : null);\n}\nexport default TextAreaInput;","map":{"version":3,"names":["React","useState","TextAreaInput","props","touched","setTouch","error","setError","htmlClass","setHtmlClass","setValue","onValueChanged","event","validClass","elementValue","target","value","field","pattern","RegExp","test","required","maxLength","length","onChange","customError","diasableField","disabled","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","toString","label","className","inputClass","placeholder"],"sources":["C:/iDAS/client/src/common/components/TextAreaInput.tsx"],"sourcesContent":["import React, { useState, ChangeEvent } from \"react\";\r\nimport { TextInputProps } from \"../types/TextInput.types\";\r\n\r\nfunction TextAreaInput(props: TextInputProps): JSX.Element {\r\n  const [touched, setTouch] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [htmlClass, setHtmlClass] = useState(\"\");\r\n  const [, setValue] = useState(\"\");\r\n\r\n  function onValueChanged(event: ChangeEvent<HTMLTextAreaElement>): void {\r\n    let [error, validClass, elementValue] = [\"\", \"\", event.target.value];\r\n\r\n    const { field } = props;\r\n\r\n    if (field === \"email\") {\r\n      var pattern = new RegExp(\r\n        /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\r\n      );\r\n      [error, validClass] = !pattern.test(elementValue)\r\n        ? [\"Complete field with proper email\", \"is-invalid\"]\r\n        : [\"\", \"is-valid\"];\r\n    } else {\r\n      [error, validClass] =\r\n        !elementValue && props.required\r\n          ? [\"Value cannot be empty\", \"is-invalid\"]\r\n          : [\"\", \"is-valid\"];\r\n    }\r\n\r\n    if (!error) {\r\n      [error, validClass] =\r\n        props.maxLength && elementValue && elementValue.length > props.maxLength\r\n          ? [\r\n              `Value can't have more than ${props.maxLength} characters`,\r\n              \"is-invalid\",\r\n            ]\r\n          : [\"\", \"is-valid\"];\r\n    }\r\n\r\n    props.onChange({\r\n      value: elementValue,\r\n      error: error,\r\n      touched: touched,\r\n      field: props.field,\r\n    });\r\n\r\n    setTouch(true);\r\n    setError(error);\r\n    setHtmlClass(validClass);\r\n    setValue(elementValue);\r\n  }\r\n\r\n  const { customError } = props;\r\n  const diasableField = props.disabled ? true : false;\r\n  return (\r\n    <div>\r\n      <label htmlFor={props.id.toString()}>{props.label}</label>\r\n      <textarea\r\n        value={props.value}\r\n        onChange={onValueChanged}\r\n        className={`form-control ${props.inputClass} ${htmlClass}`}\r\n        id={`id_${props.label}`}\r\n        placeholder={props.placeholder}\r\n        disabled={diasableField}\r\n      />\r\n      {!customError && error ? (\r\n        <div className=\"invalid-feedback\">{error}</div>\r\n      ) : null}\r\n      {!error && customError ? (\r\n        <div className=\"invalid-field\">{customError}</div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TextAreaInput;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}