{"ast":null,"code":"var _jsxFileName = \"C:\\\\iDAS\\\\client\\\\src\\\\components\\\\AuditLog\\\\AuditLog.tsx\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport AuditLogList from \"./AuditLogList\";\nimport \"./AuditLog.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loadAuditLog } from \"../../store/actions/auditlog.action\";\nimport { getAuditLog } from \"../../services/index\";\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\nimport DatePicker from \"react-datepicker\";\nimport APP_CONST from \"../../common/contant\";\nimport moment from \"moment\";\nconst Products = () => {\n  const account = useSelector(state => state.account);\n  const allowedUsers = [\"Superadmin\", \"Developer\", \"Qualityuser\"];\n  const roles = useSelector(state => state.account.roles);\n  let [userRole] = useState(roles[0] ? roles[0] : \"Developer\");\n  const dispatch = useDispatch();\n  const docList = useSelector(state => state.auditLogList);\n  const path = useSelector(state => state.root.page);\n  useEffect(() => {\n    dispatch(updateCurrentPath(\"Home\", \"Log Sheet\"));\n  }, [path.area, dispatch]);\n  const [startDate, setStartDateInfo] = useState(new Date());\n  const [endDate, setEndDateInfo] = useState(new Date());\n  const [isLogLoaded, setLogLoaded] = useState(false);\n  function setStartDate(date) {\n    const m = moment(date).startOf(\"day\").toDate(); // moment(date).format('YYYY-MM-DD');\n    setStartDateInfo(date);\n  }\n  function setEnbDate(date) {\n    const m = moment(date).startOf(\"day\").toDate(); // moment(date).format('YYYY-MM-DD');\n    setEndDateInfo(m);\n  }\n  function convertDate(retensionDateExtended) {\n    if (retensionDateExtended !== \"\") {\n      var date = new Date(retensionDateExtended),\n        mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n        day = (\"0\" + date.getDate()).slice(-2);\n      return [date.getFullYear(), mnth, day].join(\"-\");\n    }\n    return \"-\";\n  }\n  function loadAuditLogList() {\n    const m = moment(startDate).startOf(\"day\").toDate(); // moment(date).format('YYYY-MM-DD');\n\n    let date2 = new Date(startDate).toDateString();\n    date2 = moment(date2).format(\"YYYY-MM-DD\");\n    let date3 = new Date(endDate).toDateString();\n    date3 = moment(date3).format(\"YYYY-MM-DD\");\n    getAuditLog(account, {\n      startDate: date2,\n      endDate: date3\n    }).then(items => {\n      let constructedList = [];\n      items.map(log => {\n        const {\n          document_info: {\n            updatedBy = [],\n            createdOn = \"\"\n          } = {}\n        } = log;\n        const doc_CretedDate = convertDate(createdOn);\n        if (updatedBy.length > 0) {\n          let ar = {};\n          APP_CONST.EXPORT_PDF_COLUMN_AUDIT_LOG.forEach(elt => {\n            let fieldName = elt.FIELD_NAME;\n            if (fieldName === 'document_category_details') {\n              const {\n                document_category_details: {\n                  name = \"\"\n                } = {}\n              } = log;\n              ar[fieldName] = name;\n            } else if (fieldName === 'updatedBy') {\n              ar[fieldName] = \"-\";\n            } else if (fieldName === 'createdOn') {\n              ar[fieldName] = doc_CretedDate;\n            } else if (fieldName === 'updatedOn') {\n              ar[fieldName] = \"-\";\n            } else {\n              ar[fieldName] = log[fieldName];\n            }\n          });\n          constructedList.push(ar);\n          updatedBy.forEach(updxatedLog => {\n            let ar = {};\n            const {\n              name = \"\",\n              updatedOn = \"\"\n            } = updxatedLog;\n            APP_CONST.EXPORT_PDF_COLUMN_AUDIT_LOG.forEach(elt => {\n              let fieldName = elt.FIELD_NAME;\n              if (fieldName === 'document_category_details') {\n                const {\n                  document_category_details: {\n                    name = \"\"\n                  } = {}\n                } = log;\n                ar[fieldName] = name;\n              } else if (fieldName === 'updatedBy') {\n                ar[fieldName] = name;\n              } else if (fieldName === 'createdOn') {\n                ar[fieldName] = doc_CretedDate;\n              } else if (fieldName === 'updatedOn') {\n                ar[fieldName] = convertDate(updatedOn);\n                ;\n              } else {\n                if (fieldName === 'name') {\n                  ar[fieldName] = \"       -\";\n                } else {\n                  ar[fieldName] = log[fieldName];\n                }\n              }\n            });\n            constructedList.push(ar);\n          });\n        } else {\n          let ar = {};\n          APP_CONST.EXPORT_PDF_COLUMN_AUDIT_LOG.forEach(elt => {\n            let fieldName = elt.FIELD_NAME;\n            if (fieldName === 'document_category_details') {\n              const {\n                document_category_details: {\n                  name = \"\"\n                } = {}\n              } = log;\n              ar[fieldName] = name;\n            } else if (fieldName === 'updatedBy') {\n              ar[fieldName] = log.name;\n            } else if (fieldName === 'createdOn') {\n              ar[fieldName] = doc_CretedDate;\n            } else if (fieldName === 'updatedOn') {\n              ar[fieldName] = \"-\";\n            } else {\n              ar[fieldName] = log[fieldName];\n            }\n          });\n          constructedList.push(ar);\n        }\n      });\n      if (constructedList.length > 0) {\n        setLogLoaded(true);\n      }\n      dispatch(loadAuditLog(constructedList));\n    });\n  }\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"h5 mb-4 font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 4\n    }\n  }, \"Document Audit Log\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-12 col-lg-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card shadow mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body date-filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"h5 mb-4 font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, \"Audit Log\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-4 col-lg-4\",\n    style: {\n      float: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, \"Start Date:\"), /*#__PURE__*/React.createElement(DatePicker, {\n    dateFormat: \"yyyy/MM/dd\",\n    selected: startDate,\n    onChange: date => setStartDate(date),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-4 col-lg-4\",\n    style: {\n      float: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 8\n    }\n  }, \"End Date:\"), /*#__PURE__*/React.createElement(DatePicker, {\n    dateFormat: \"yyyy/MM/dd\",\n    selected: endDate,\n    onChange: date => setEnbDate(date),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-4 col-lg-4 audit-btn\",\n    style: {\n      float: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    onClick: () => loadAuditLogList(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, \"Load Sheet\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-12 col-lg-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card shadow mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 8\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    style: {\n      height: \"900px\"\n    },\n    id: \"YUSUFF\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AuditLogList, {\n    logLoaded: isLogLoaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 8\n    }\n  }))))));\n};\nexport default Products;","map":{"version":3,"names":["React","Fragment","useState","useEffect","AuditLogList","useDispatch","useSelector","loadAuditLog","getAuditLog","updateCurrentPath","DatePicker","APP_CONST","moment","Products","account","state","allowedUsers","roles","userRole","dispatch","docList","auditLogList","path","root","page","area","startDate","setStartDateInfo","Date","endDate","setEndDateInfo","isLogLoaded","setLogLoaded","setStartDate","date","m","startOf","toDate","setEnbDate","convertDate","retensionDateExtended","mnth","getMonth","slice","day","getDate","getFullYear","join","loadAuditLogList","date2","toDateString","format","date3","then","items","constructedList","map","log","document_info","updatedBy","createdOn","doc_CretedDate","length","ar","EXPORT_PDF_COLUMN_AUDIT_LOG","forEach","elt","fieldName","FIELD_NAME","document_category_details","name","push","updxatedLog","updatedOn","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","style","float","dateFormat","selected","onChange","type","onClick","height","id","logLoaded"],"sources":["C:/iDAS/client/src/components/AuditLog/AuditLog.tsx"],"sourcesContent":["import React, { Fragment, Dispatch, useState, useEffect } from \"react\";\r\nimport AuditLogList from \"./AuditLogList\";\r\nimport \"./AuditLog.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n\tIAuditLogState,\r\n\tIStateType,\r\n\tIRootPageStateType,\r\n} from \"../../store/models/root.interface\";\r\n\r\nimport { loadAuditLog } from \"../../store/actions/auditlog.action\";\r\nimport {\r\n\tIAuditLog,\r\n\tIAuditLogList,\r\n} from \"../../store/models/auditLog.interface\";\r\nimport { getAuditLog } from \"../../services/index\";\r\nimport { IAccount } from \"../../store/models/account.interface\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport APP_CONST from \"../../common/contant\";\r\n\r\n\r\nimport moment from \"moment\";\r\n\r\nconst Products: React.FC = () => {\r\n\tconst account: IAccount = useSelector((state: IStateType) => state.account);\r\n\tconst allowedUsers = [\"Superadmin\", \"Developer\", \"Qualityuser\"];\r\n\tconst roles: any = useSelector((state: IStateType) => state.account.roles);\r\n\tlet [userRole] = useState(roles[0] ? roles[0] : \"Developer\");\r\n\tconst dispatch: Dispatch<any> = useDispatch();\r\n\tconst docList: IAuditLogState = useSelector(\r\n\t\t(state: IStateType) => state.auditLogList\r\n\t);\r\n\tconst path: IRootPageStateType = useSelector(\r\n\t\t(state: IStateType) => state.root.page\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(updateCurrentPath(\"Home\", \"Log Sheet\"));\r\n\t}, [path.area, dispatch]);\r\n\r\n\tconst [startDate, setStartDateInfo] = useState(new Date());\r\n\tconst [endDate, setEndDateInfo] = useState(new Date());\r\n\tconst [isLogLoaded, setLogLoaded] = useState(false);\r\n\tfunction setStartDate(date: any) {\r\n\t\tconst m = moment(date).startOf(\"day\").toDate(); // moment(date).format('YYYY-MM-DD');\r\n\t\tsetStartDateInfo(date);\r\n\t}\r\n\tfunction setEnbDate(date: any) {\r\n\t\tconst m = moment(date).startOf(\"day\").toDate(); // moment(date).format('YYYY-MM-DD');\r\n\t\tsetEndDateInfo(m);\r\n\t}\r\n\r\n\tfunction convertDate(retensionDateExtended:any) {\r\n\t \r\n\t\tif(retensionDateExtended !== \"\"){\r\n\t\t\tvar date = new Date(retensionDateExtended),\r\n\t\t  mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n\t\t  day = (\"0\" + date.getDate()).slice(-2);\r\n\t  \r\n\t\treturn [date.getFullYear(), mnth, day].join(\"-\");\r\n\t\t}\r\n\t\treturn \"-\"; \r\n\t  }\r\n\tfunction loadAuditLogList() {\r\n\t\tconst m = moment(startDate).startOf(\"day\").toDate(); // moment(date).format('YYYY-MM-DD');\r\n\r\n\t\tlet date2 = new Date(startDate).toDateString();\r\n\t\tdate2 = moment(date2).format(\"YYYY-MM-DD\");\r\n\r\n\t\tlet date3 = new Date(endDate).toDateString();\r\n\t\tdate3 = moment(date3).format(\"YYYY-MM-DD\");\r\n \r\n\t\tgetAuditLog(account, { startDate: date2, endDate: date3 }).then(\r\n\t\t\t(items: IAuditLogList) => {\r\n\t\t\t\tlet constructedList:any = [];\r\n\t\t\t\titems.map((log:any)=>{\r\n\r\n\t\t\t\t\tconst {document_info:{updatedBy=[], createdOn=\"\"}={}} = log;\r\n\t\t\t\t\tconst doc_CretedDate = convertDate(createdOn); \r\n\t\t\t\r\n\t\t\t\t\tif(updatedBy.length > 0){\r\n\t\t\t\t\t\tlet ar:any = {};\r\n\t\t\t\t\t\tAPP_CONST.EXPORT_PDF_COLUMN_AUDIT_LOG.forEach((elt)=> {\r\n\t\t\t\t\t\t\tlet fieldName = elt.FIELD_NAME\t\t\t\t\t\r\n\t\t\t\t\t\t\tif(fieldName ==='document_category_details'){\r\n\t\t\t\t\t\t\t\tconst {document_category_details:{name=\"\"}={}} = log;\r\n\t\t\t\t\t\t\t\tar[fieldName] = name;\r\n\t\t\t\t\t\t\t}else if(fieldName ==='updatedBy'){\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tar[fieldName] = \"-\";\r\n\t\t\t\t\t\t\t}else if(fieldName ==='createdOn'){\t\t\t\t\t \r\n\t\t\t\t\t\t\t\tar[fieldName] = doc_CretedDate;\r\n\t\t\t\t\t\t\t}else if(fieldName ==='updatedOn'){\r\n\t\t\t\t\t\t\t\tar[fieldName] = \"-\"\r\n\t\t\t\t\t\t\t}else{\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tar[fieldName] = log[fieldName];\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tconstructedList.push(ar);\r\n\t\t\t\r\n\t\t\t\t\t\tupdatedBy.forEach((updxatedLog:any)=>{\r\n\t\t\t\t\t\t\tlet ar:any = {};\r\n\t\t\t\t\t\t\tconst {name=\"\", updatedOn=\"\"} = updxatedLog;\r\n\t\t\t\t\t\t\tAPP_CONST.EXPORT_PDF_COLUMN_AUDIT_LOG.forEach((elt)=> {\r\n\t\t\t\t\t\t\t\tlet fieldName = elt.FIELD_NAME\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif(fieldName ==='document_category_details'){\r\n\t\t\t\t\t\t\t\t\tconst {document_category_details:{name=\"\"}={}} = log;\r\n\t\t\t\t\t\t\t\t\tar[fieldName] = name;\r\n\t\t\t\t\t\t\t\t}else if(fieldName ==='updatedBy'){\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tar[fieldName] = name;\r\n\t\t\t\t\t\t\t\t}else if(fieldName ==='createdOn'){\t\t\t\t\t \r\n\t\t\t\t\t\t\t\t\tar[fieldName] = doc_CretedDate;\r\n\t\t\t\t\t\t\t\t}else if(fieldName ==='updatedOn'){\r\n\t\t\t\t\t\t\t\t\tar[fieldName] = convertDate(updatedOn);;\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\tif(fieldName === 'name'){\r\n\t\t\t\t\t\t\t\t\t\tar[fieldName] = \"       -\" ;\r\n\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\tar[fieldName] = log[fieldName];\r\n\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\tconstructedList.push(ar);\r\n\t\t\t\t\t\t});\r\n\t\t\t\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tlet ar:any = {};\r\n\t\t\t\t\t\tAPP_CONST.EXPORT_PDF_COLUMN_AUDIT_LOG.forEach((elt)=> {\r\n\t\t\t\t\t\t\tlet fieldName = elt.FIELD_NAME\t\t\t\t\t\r\n\t\t\t\t\t\t\tif(fieldName ==='document_category_details'){\r\n\t\t\t\t\t\t\t\tconst {document_category_details:{name=\"\"}={}} = log;\r\n\t\t\t\t\t\t\t\tar[fieldName] = name;\r\n\t\t\t\t\t\t\t}else if(fieldName ==='updatedBy'){\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tar[fieldName] = log.name;\r\n\t\t\t\t\t\t\t}else if(fieldName ==='createdOn'){\t\t\t\t\t \r\n\t\t\t\t\t\t\t\tar[fieldName] = doc_CretedDate;\r\n\t\t\t\t\t\t\t}else if(fieldName ==='updatedOn'){\r\n\t\t\t\t\t\t\t\tar[fieldName] = \"-\"\r\n\t\t\t\t\t\t\t}else{\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tar[fieldName] = log[fieldName];\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tconstructedList.push(ar);\r\n\t\t\t\t\t} \r\n\t\t\t\t}) \r\n\t\t\t\tif(constructedList.length > 0){\r\n\t\t\t\t\tsetLogLoaded(true);\r\n\t\t\t\t}\r\n\t\t\t\tdispatch(loadAuditLog(constructedList));\t\t \r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<h1 className=\"h5 mb-4 font-bold\">Document Audit Log</h1>\r\n\t\t\t{/* <p className=\"mb-4 font-14\">Document Category here</p> */}\r\n\t\t\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-xl-12 col-lg-12\">\r\n\t\t\t\t\t<div className=\"card shadow mb-4\">\r\n\t\t\t\t\t\t<div className=\"card-body date-filter\">\r\n\t\t\t\t\t\t\t<div className=\"card-title\">\r\n\t\t\t\t\t\t\t\t<h1 className=\"h5 mb-4 font-bold\">Audit Log</h1>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-xl-4 col-lg-4\" style={{ float: \"left\" }}>\r\n\t\t\t\t\t\t\t\t<label>Start Date:</label>\r\n\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\tdateFormat=\"yyyy/MM/dd\"\r\n\t\t\t\t\t\t\t\t\tselected={startDate}\r\n\t\t\t\t\t\t\t\t\tonChange={(date) => setStartDate(date)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-xl-4 col-lg-4\" style={{ float: \"left\" }}>\r\n\t\t\t\t\t\t\t<label>End Date:</label>\r\n\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\tdateFormat=\"yyyy/MM/dd\"\r\n\t\t\t\t\t\t\t\t\tselected={endDate}\r\n\t\t\t\t\t\t\t\t\tonChange={(date) => setEnbDate(date)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-xl-4 col-lg-4 audit-btn\" style={{ float: \"left\" }}>\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => loadAuditLogList()}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tLoad Sheet\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-xl-12 col-lg-12\">\r\n\t\t\t\t\t<div className=\"card shadow mb-4\">\r\n\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t<div className=\"card-title\">\r\n\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"card-body\"  style={{height: \"900px\"}} id=\"YUSUFF\">\r\n\t\t\t\t\t\t\t<AuditLogList\r\n\t\t\t\t\t\t\tlogLoaded ={isLogLoaded} \r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default Products;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}