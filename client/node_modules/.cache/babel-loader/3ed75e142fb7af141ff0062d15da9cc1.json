{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _util = require('./util');\nvar _util2 = _interopRequireDefault(_util);\nvar _Const = require('./Const');\nvar _Const2 = _interopRequireDefault(_Const);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/* eslint block-scoped-var: 0 */\n/* eslint vars-on-top: 0 */\n/* eslint no-var: 0 */\n/* eslint no-unused-vars: 0 */\nif (_util2.default.canUseDOM()) {\n  var filesaver = require('./filesaver');\n  var saveAs = filesaver.saveAs;\n}\nfunction toString(data, keys, separator, excludeCSVHeader) {\n  var dataString = '';\n  if (data.length === 0) return dataString;\n  var headCells = [];\n  var rowCount = 0;\n  keys.forEach(function (key) {\n    if (key.row > rowCount) {\n      rowCount = key.row;\n    }\n    // rowCount += (key.rowSpan + key.colSpan - 1);\n    for (var index = 0; index < key.colSpan; index++) {\n      headCells.push(key);\n    }\n  });\n  var firstRow = excludeCSVHeader ? 1 : 0;\n  var _loop = function _loop(i) {\n    dataString += headCells.map(function (x) {\n      if (x.row + (x.rowSpan - 1) === i) {\n        return '\"' + x.header + '\"';\n      }\n      if (x.row === i && x.rowSpan > 1) {\n        return '';\n      }\n    }).filter(function (key) {\n      return typeof key !== 'undefined';\n    }).join(separator) + '\\n';\n  };\n  for (var i = firstRow; i <= rowCount; i++) {\n    _loop(i);\n  }\n  keys = keys.filter(function (key) {\n    return key.field !== undefined;\n  });\n  data.map(function (row) {\n    keys.map(function (col, i) {\n      var field = col.field,\n        format = col.format,\n        extraData = col.extraData,\n        type = col.type;\n      var value = typeof format !== 'undefined' ? format(row[field], row, extraData) : row[field];\n      value = type === _Const2.default.CSV_NUMBER_TYPE ? Number(value) : '\"' + value + '\"';\n      var cell = typeof value !== 'undefined' ? value : '';\n      dataString += cell;\n      if (i + 1 < keys.length) dataString += separator;\n    });\n    dataString += '\\n';\n  });\n  return dataString;\n}\nvar exportCSV = function exportCSV(data, keys, filename, separator, noAutoBOM, excludeCSVHeader) {\n  var dataString = toString(data, keys, separator, excludeCSVHeader);\n  if (typeof window !== 'undefined') {\n    noAutoBOM = noAutoBOM === undefined ? true : noAutoBOM;\n    saveAs(new Blob(['\\uFEFF', dataString], {\n      type: 'text/plain;charset=utf-8'\n    }), filename, noAutoBOM);\n  }\n};\nvar _default = exportCSV;\nexports.default = _default;\n;\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n  __REACT_HOT_LOADER__.register(saveAs, 'saveAs', '/Users/allen/Node/react-bootstrap-table-new/react-bootstrap-table/src/csv_export_util.js');\n  __REACT_HOT_LOADER__.register(toString, 'toString', '/Users/allen/Node/react-bootstrap-table-new/react-bootstrap-table/src/csv_export_util.js');\n  __REACT_HOT_LOADER__.register(exportCSV, 'exportCSV', '/Users/allen/Node/react-bootstrap-table-new/react-bootstrap-table/src/csv_export_util.js');\n  __REACT_HOT_LOADER__.register(_default, 'default', '/Users/allen/Node/react-bootstrap-table-new/react-bootstrap-table/src/csv_export_util.js');\n}();\n;","map":null,"metadata":{},"sourceType":"script"}