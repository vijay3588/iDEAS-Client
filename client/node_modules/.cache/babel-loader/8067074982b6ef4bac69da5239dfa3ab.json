{"ast":null,"code":"export const LIST_DOCCATEGORY = \"LIST_DOCCATEGORY\";\nexport const LIST_DOCTYPE = \"LIST_DOCTYPE\";\nexport const LIST_DOC = \"LIST_DOC\";\nexport const LIST_BOX = \"LIST_BOX\";\nexport function updateListofDocCategory(items) {\n  let counter = {\n    docCategories: 0\n  };\n  if (items.data.length > 0) {\n    counter[\"docCategories\"] = items.data.length;\n  }\n  return {\n    type: LIST_DOCCATEGORY,\n    ...counter\n  };\n}\nexport function updateListofDocType(items) {\n  let counter = {\n    docType: 0\n  };\n  if (items.data.length > 0) {\n    counter[\"docType\"] = items.data.length;\n  }\n  return {\n    type: LIST_DOCCATEGORY,\n    ...counter\n  };\n}\nexport function updateListofDocuemnts(items) {\n  const {\n    box = {},\n    documents = {}\n  } = items;\n  let counter = {\n    box: 0,\n    totalDocuments: 0,\n    nApprovedDocuments: 0,\n    approvedDocuments: 0\n  };\n  if (box.data.length > 0) {\n    counter[\"box\"] = box.data.length;\n  }\n  if (documents.data.length > 0) {\n    counter[\"totalDocuments\"] = documents.data.length;\n    const nApprovedDocuments = documents.data.filter(pr => !pr.document_info.status);\n    const approvedDocuments = documents.data.filter(pr => pr.document_info.status);\n    counter[\"nApprovedDocuments\"] = nApprovedDocuments;\n    counter[\"approvedDocuments\"] = approvedDocuments;\n  }\n  ;\n  return {\n    type: LIST_DOC,\n    ...counter\n  };\n}\nexport function updateListofBoxes(items) {\n  let counter = {\n    boxes: 0\n  };\n  if (items.data.length > 0) {\n    counter[\"boxes\"] = items.data.length;\n  }\n  return {\n    type: LIST_BOX,\n    ...counter\n  };\n}","map":{"version":3,"names":["LIST_DOCCATEGORY","LIST_DOCTYPE","LIST_DOC","LIST_BOX","updateListofDocCategory","items","counter","docCategories","data","length","type","updateListofDocType","docType","updateListofDocuemnts","box","documents","totalDocuments","nApprovedDocuments","approvedDocuments","filter","pr","document_info","status","updateListofBoxes","boxes"],"sources":["C:/iDAS/client/src/store/actions/home.action.ts"],"sourcesContent":["\r\nexport const LIST_DOCCATEGORY: string = \"LIST_DOCCATEGORY\";\r\nexport const LIST_DOCTYPE: string = \"LIST_DOCTYPE\";\r\nexport const LIST_DOC: string = \"LIST_DOC\";\r\nexport const LIST_BOX: string = \"LIST_BOX\";\r\n\r\n    export function updateListofDocCategory(items : any) {    \r\n        let counter : any ={docCategories:0};\r\n        if(items.data.length > 0){\r\n            counter[\"docCategories\"] = items.data.length ;\r\n        } \r\n        return { type: LIST_DOCCATEGORY , ...counter };      \r\n    }\r\n    export function updateListofDocType(items : any) {   \r\n        let counter : any ={docType:0};\r\n        if(items.data.length > 0){\r\n            counter[\"docType\"] = items.data.length ;\r\n        } \r\n        return { type: LIST_DOCCATEGORY ,  ...counter  };      \r\n    }\r\n    export function updateListofDocuemnts(items : any) {  \r\n        \r\n        const {box = {}, documents={  }} = items;\r\n        let counter : any ={ box:0, totalDocuments : 0, nApprovedDocuments : 0, approvedDocuments:0};\r\n        if(box.data.length > 0){\r\n            counter[\"box\"] = box.data.length ;\r\n        }\r\n        if(documents.data.length > 0){\r\n            counter[\"totalDocuments\"] = documents.data.length ;\r\n            const nApprovedDocuments = documents.data.filter((pr :any) => !pr.document_info.status);\r\n            const approvedDocuments = documents.data.filter((pr :any) => pr.document_info.status); \r\n            \r\n            counter[\"nApprovedDocuments\"] = nApprovedDocuments ;\r\n            counter[\"approvedDocuments\"] = approvedDocuments ;\r\n        }\r\n ;\r\n        return { type: LIST_DOC , ...counter };      \r\n    }\r\n    export function updateListofBoxes(items : any) {   \r\n        let counter : any ={boxes:0};\r\n        if(items.data.length > 0){\r\n            counter[\"boxes\"] = items.data.length ;\r\n        } \r\n        return { type: LIST_BOX , ...counter };      \r\n    }\r\n \r\n\r\n "],"mappings":"AACA,OAAO,MAAMA,gBAAwB,GAAG,kBAAkB;AAC1D,OAAO,MAAMC,YAAoB,GAAG,cAAc;AAClD,OAAO,MAAMC,QAAgB,GAAG,UAAU;AAC1C,OAAO,MAAMC,QAAgB,GAAG,UAAU;AAEtC,OAAO,SAASC,uBAAuBA,CAACC,KAAW,EAAE;EACjD,IAAIC,OAAa,GAAE;IAACC,aAAa,EAAC;EAAC,CAAC;EACpC,IAAGF,KAAK,CAACG,IAAI,CAACC,MAAM,GAAG,CAAC,EAAC;IACrBH,OAAO,CAAC,eAAe,CAAC,GAAGD,KAAK,CAACG,IAAI,CAACC,MAAM;EAChD;EACA,OAAO;IAAEC,IAAI,EAAEV,gBAAgB;IAAG,GAAGM;EAAQ,CAAC;AAClD;AACA,OAAO,SAASK,mBAAmBA,CAACN,KAAW,EAAE;EAC7C,IAAIC,OAAa,GAAE;IAACM,OAAO,EAAC;EAAC,CAAC;EAC9B,IAAGP,KAAK,CAACG,IAAI,CAACC,MAAM,GAAG,CAAC,EAAC;IACrBH,OAAO,CAAC,SAAS,CAAC,GAAGD,KAAK,CAACG,IAAI,CAACC,MAAM;EAC1C;EACA,OAAO;IAAEC,IAAI,EAAEV,gBAAgB;IAAI,GAAGM;EAAS,CAAC;AACpD;AACA,OAAO,SAASO,qBAAqBA,CAACR,KAAW,EAAE;EAE/C,MAAM;IAACS,GAAG,GAAG,CAAC,CAAC;IAAEC,SAAS,GAAC,CAAG;EAAC,CAAC,GAAGV,KAAK;EACxC,IAAIC,OAAa,GAAE;IAAEQ,GAAG,EAAC,CAAC;IAAEE,cAAc,EAAG,CAAC;IAAEC,kBAAkB,EAAG,CAAC;IAAEC,iBAAiB,EAAC;EAAC,CAAC;EAC5F,IAAGJ,GAAG,CAACN,IAAI,CAACC,MAAM,GAAG,CAAC,EAAC;IACnBH,OAAO,CAAC,KAAK,CAAC,GAAGQ,GAAG,CAACN,IAAI,CAACC,MAAM;EACpC;EACA,IAAGM,SAAS,CAACP,IAAI,CAACC,MAAM,GAAG,CAAC,EAAC;IACzBH,OAAO,CAAC,gBAAgB,CAAC,GAAGS,SAAS,CAACP,IAAI,CAACC,MAAM;IACjD,MAAMQ,kBAAkB,GAAGF,SAAS,CAACP,IAAI,CAACW,MAAM,CAAEC,EAAO,IAAK,CAACA,EAAE,CAACC,aAAa,CAACC,MAAM,CAAC;IACvF,MAAMJ,iBAAiB,GAAGH,SAAS,CAACP,IAAI,CAACW,MAAM,CAAEC,EAAO,IAAKA,EAAE,CAACC,aAAa,CAACC,MAAM,CAAC;IAErFhB,OAAO,CAAC,oBAAoB,CAAC,GAAGW,kBAAkB;IAClDX,OAAO,CAAC,mBAAmB,CAAC,GAAGY,iBAAiB;EACpD;EACP;EACO,OAAO;IAAER,IAAI,EAAER,QAAQ;IAAG,GAAGI;EAAQ,CAAC;AAC1C;AACA,OAAO,SAASiB,iBAAiBA,CAAClB,KAAW,EAAE;EAC3C,IAAIC,OAAa,GAAE;IAACkB,KAAK,EAAC;EAAC,CAAC;EAC5B,IAAGnB,KAAK,CAACG,IAAI,CAACC,MAAM,GAAG,CAAC,EAAC;IACrBH,OAAO,CAAC,OAAO,CAAC,GAAGD,KAAK,CAACG,IAAI,CAACC,MAAM;EACxC;EACA,OAAO;IAAEC,IAAI,EAAEP,QAAQ;IAAG,GAAGG;EAAQ,CAAC;AAC1C"},"metadata":{},"sourceType":"module"}