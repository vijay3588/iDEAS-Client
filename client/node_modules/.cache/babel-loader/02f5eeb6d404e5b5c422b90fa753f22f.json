{"ast":null,"code":"import { ADD_DOCDEPARTMENT, CHANGE_DOCDEPARTMENT_PENDING_EDIT, EDIT_DOCDEPARTMENT, REMOVE_DOCDEPARTMENT, CLEAR_DOCDEPARTMENT_PENDING_EDIT, SET_DOCDEPARTMENT_MODIFICATION_STATE, CHANGE_DOCDEPARTMENT_AMOUNT, LIST_DOCDEPARTMENT } from \"../actions/docdepartment.action\";\nimport { DocDepartmentModificationStatus } from \"../models/docdepartment.interface\";\nconst initialState = {\n  modificationState: DocDepartmentModificationStatus.None,\n  selectedDocDepartment: null,\n  docDepartments: []\n};\nfunction docDepartmentsReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case LIST_DOCDEPARTMENT:\n      {\n        return {\n          ...state,\n          docDepartments: action.docDepartments\n        };\n      }\n    case ADD_DOCDEPARTMENT:\n      {\n        //  let maxId: number = Math.max.apply(Math, state.docDepartments.map(function(o) { return o._id; }));\n        //  action.product.id = maxId + 1; \n        return {\n          ...state,\n          docDepartments: [...state.docDepartments, action.docDepartment]\n        };\n      }\n    case EDIT_DOCDEPARTMENT:\n      {\n        const foundIndex = state.docDepartments.findIndex(pr => pr._id === action.docDepartment._id);\n        let docDepartments = state.docDepartments;\n        docDepartments[foundIndex] = action.docDepartment;\n        return {\n          ...state,\n          docDepartments: docDepartments\n        };\n      }\n    case REMOVE_DOCDEPARTMENT:\n      {\n        return {\n          ...state,\n          docDepartments: state.docDepartments.filter(pr => pr._id !== action.id)\n        };\n      }\n    case CHANGE_DOCDEPARTMENT_PENDING_EDIT:\n      {\n        return {\n          ...state,\n          selectedDocDepartment: action.docDepartment\n        };\n      }\n    case CLEAR_DOCDEPARTMENT_PENDING_EDIT:\n      {\n        return {\n          ...state,\n          selectedDocDepartment: null\n        };\n      }\n    case SET_DOCDEPARTMENT_MODIFICATION_STATE:\n      {\n        return {\n          ...state,\n          modificationState: action.value\n        };\n      }\n    case CHANGE_DOCDEPARTMENT_AMOUNT:\n      {\n        //const foundIndex: number = state.docDepartments.findIndex(pr => pr._id === action.id);\n        let docDepartments = state.docDepartments;\n        return {\n          ...state,\n          docDepartments: docDepartments\n        };\n      }\n    default:\n      return state;\n  }\n}\nexport default docDepartmentsReducer;","map":{"version":3,"names":["ADD_DOCDEPARTMENT","CHANGE_DOCDEPARTMENT_PENDING_EDIT","EDIT_DOCDEPARTMENT","REMOVE_DOCDEPARTMENT","CLEAR_DOCDEPARTMENT_PENDING_EDIT","SET_DOCDEPARTMENT_MODIFICATION_STATE","CHANGE_DOCDEPARTMENT_AMOUNT","LIST_DOCDEPARTMENT","DocDepartmentModificationStatus","initialState","modificationState","None","selectedDocDepartment","docDepartments","docDepartmentsReducer","state","arguments","length","undefined","action","type","docDepartment","foundIndex","findIndex","pr","_id","filter","id","value"],"sources":["C:/iDASnew/client/src/store/reducers/docdepartment.reducer.ts"],"sourcesContent":["import { IDocDepartmentState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_DOCDEPARTMENT, CHANGE_DOCDEPARTMENT_PENDING_EDIT, EDIT_DOCDEPARTMENT, REMOVE_DOCDEPARTMENT,\r\n    CLEAR_DOCDEPARTMENT_PENDING_EDIT, SET_DOCDEPARTMENT_MODIFICATION_STATE, CHANGE_DOCDEPARTMENT_AMOUNT, LIST_DOCDEPARTMENT} from \"../actions/docdepartment.action\";\r\nimport { IDocDepartment, DocDepartmentModificationStatus } from \"../models/docdepartment.interface\";\r\n\r\n\r\n\r\nconst initialState: IDocDepartmentState = {\r\n    modificationState: DocDepartmentModificationStatus.None,\r\n    selectedDocDepartment: null,\r\n    docDepartments: []\r\n};\r\n\r\nfunction docDepartmentsReducer(state: IDocDepartmentState = initialState, action: IActionBase): IDocDepartmentState {\r\n    switch (action.type) {         \r\n        case LIST_DOCDEPARTMENT: { \r\n            return { ...state, docDepartments:  action.docDepartments};\r\n        }        \r\n        case ADD_DOCDEPARTMENT: {\r\n          //  let maxId: number = Math.max.apply(Math, state.docDepartments.map(function(o) { return o._id; }));\r\n          //  action.product.id = maxId + 1; \r\n            return { ...state, docDepartments: [...state.docDepartments, action.docDepartment]};\r\n        }\r\n        case EDIT_DOCDEPARTMENT: {\r\n            const foundIndex: number = state.docDepartments.findIndex(pr => pr._id === action.docDepartment._id);\r\n            let docDepartments: IDocDepartment[] = state.docDepartments;\r\n            docDepartments[foundIndex] = action.docDepartment;\r\n            return { ...state, docDepartments: docDepartments };\r\n        }\r\n        case REMOVE_DOCDEPARTMENT: {\r\n            return { ...state, docDepartments: state.docDepartments.filter(pr => pr._id !== action.id) };\r\n        }\r\n        case CHANGE_DOCDEPARTMENT_PENDING_EDIT: {\r\n            return { ...state, selectedDocDepartment: action.docDepartment };\r\n        }\r\n        case CLEAR_DOCDEPARTMENT_PENDING_EDIT: {\r\n            return { ...state, selectedDocDepartment: null };\r\n        }\r\n        case SET_DOCDEPARTMENT_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        case CHANGE_DOCDEPARTMENT_AMOUNT: {\r\n            //const foundIndex: number = state.docDepartments.findIndex(pr => pr._id === action.id);\r\n            let docDepartments: IDocDepartment[] = state.docDepartments;\r\n            return { ...state, docDepartments: docDepartments };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default docDepartmentsReducer;"],"mappings":"AACA,SAASA,iBAAiB,EAAEC,iCAAiC,EAAEC,kBAAkB,EAAEC,oBAAoB,EACnGC,gCAAgC,EAAEC,oCAAoC,EAAEC,2BAA2B,EAAEC,kBAAkB,QAAO,iCAAiC;AACnK,SAAyBC,+BAA+B,QAAQ,mCAAmC;AAInG,MAAMC,YAAiC,GAAG;EACtCC,iBAAiB,EAAEF,+BAA+B,CAACG,IAAI;EACvDC,qBAAqB,EAAE,IAAI;EAC3BC,cAAc,EAAE;AACpB,CAAC;AAED,SAASC,qBAAqBA,CAAA,EAAsF;EAAA,IAArFC,KAA0B,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGP,YAAY;EAAA,IAAEU,MAAmB,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACzF,QAAQC,MAAM,CAACC,IAAI;IACf,KAAKb,kBAAkB;MAAE;QACrB,OAAO;UAAE,GAAGQ,KAAK;UAAEF,cAAc,EAAGM,MAAM,CAACN;QAAc,CAAC;MAC9D;IACA,KAAKb,iBAAiB;MAAE;QACtB;QACA;QACE,OAAO;UAAE,GAAGe,KAAK;UAAEF,cAAc,EAAE,CAAC,GAAGE,KAAK,CAACF,cAAc,EAAEM,MAAM,CAACE,aAAa;QAAC,CAAC;MACvF;IACA,KAAKnB,kBAAkB;MAAE;QACrB,MAAMoB,UAAkB,GAAGP,KAAK,CAACF,cAAc,CAACU,SAAS,CAACC,EAAE,IAAIA,EAAE,CAACC,GAAG,KAAKN,MAAM,CAACE,aAAa,CAACI,GAAG,CAAC;QACpG,IAAIZ,cAAgC,GAAGE,KAAK,CAACF,cAAc;QAC3DA,cAAc,CAACS,UAAU,CAAC,GAAGH,MAAM,CAACE,aAAa;QACjD,OAAO;UAAE,GAAGN,KAAK;UAAEF,cAAc,EAAEA;QAAe,CAAC;MACvD;IACA,KAAKV,oBAAoB;MAAE;QACvB,OAAO;UAAE,GAAGY,KAAK;UAAEF,cAAc,EAAEE,KAAK,CAACF,cAAc,CAACa,MAAM,CAACF,EAAE,IAAIA,EAAE,CAACC,GAAG,KAAKN,MAAM,CAACQ,EAAE;QAAE,CAAC;MAChG;IACA,KAAK1B,iCAAiC;MAAE;QACpC,OAAO;UAAE,GAAGc,KAAK;UAAEH,qBAAqB,EAAEO,MAAM,CAACE;QAAc,CAAC;MACpE;IACA,KAAKjB,gCAAgC;MAAE;QACnC,OAAO;UAAE,GAAGW,KAAK;UAAEH,qBAAqB,EAAE;QAAK,CAAC;MACpD;IACA,KAAKP,oCAAoC;MAAE;QACvC,OAAO;UAAE,GAAGU,KAAK;UAAEL,iBAAiB,EAAES,MAAM,CAACS;QAAM,CAAC;MACxD;IACA,KAAKtB,2BAA2B;MAAE;QAC9B;QACA,IAAIO,cAAgC,GAAGE,KAAK,CAACF,cAAc;QAC3D,OAAO;UAAE,GAAGE,KAAK;UAAEF,cAAc,EAAEA;QAAe,CAAC;MACvD;IACA;MACI,OAAOE,KAAK;EACpB;AACJ;AAGA,eAAeD,qBAAqB"},"metadata":{},"sourceType":"module"}