{"ast":null,"code":"var _jsxFileName = \"C:\\\\iDASnew\\\\client\\\\src\\\\common\\\\components\\\\DateInput.tsx\";\nimport React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nfunction TextInput(props) {\n  //const [startDate, setStartDate] = useState(new Date());\n\n  const [touched, setTouch] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [, setHtmlClass] = useState(\"\");\n  //const [, ,] = useState(\"\");\n\n  function onValueChanged(dateValue) {\n    let [error, validClass, elementValue] = [\"\", \"\", dateValue];\n    [error, validClass] = !elementValue && props.required ? [\"Value cannot be empty\", \"is-invalid\"] : [\"\", \"is-valid\"];\n    props.onChange({\n      value: elementValue,\n      error: error,\n      touched: touched,\n      field: props.field\n    });\n    setTouch(true);\n    setError(error);\n    setHtmlClass(validClass);\n    // setValue(elementValue);\n    //\n\n    //setStartDate(new Date(dateValue));\n  }\n\n  let selectedDate = null;\n  if (props.value !== undefined) {\n    if (new Date(props.value).getUTCFullYear() !== 1) {\n      selectedDate = new Date(props.value);\n    }\n  }\n  let fieldName = \"\";\n  if (props.name !== undefined) {\n    fieldName = props.name;\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: props.id.toString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, props.label), /*#__PURE__*/React.createElement(DatePicker, {\n    className: \"form-control\",\n    selected: selectedDate,\n    isClearable: true,\n    closeOnScroll: true,\n    placeholderText: props.placeholder,\n    name: props.name,\n    onChange: date => onValueChanged(date),\n    onChangeRaw: e => {\n      e.preventDefault();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), error ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 16\n    }\n  }, error) : null);\n}\nexport default TextInput;","map":{"version":3,"names":["React","useState","DatePicker","TextInput","props","touched","setTouch","error","setError","setHtmlClass","onValueChanged","dateValue","validClass","elementValue","required","onChange","value","field","selectedDate","undefined","Date","getUTCFullYear","fieldName","name","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","toString","label","className","selected","isClearable","closeOnScroll","placeholderText","placeholder","date","onChangeRaw","e","preventDefault"],"sources":["C:/iDASnew/client/src/common/components/DateInput.tsx"],"sourcesContent":["import React, { useState, ChangeEvent } from \"react\";\r\nimport { TextInputProps } from \"../types/DateInput.types\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nfunction TextInput(props: TextInputProps): JSX.Element {\r\n  //const [startDate, setStartDate] = useState(new Date());\r\n\r\n  const [touched, setTouch] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [, setHtmlClass] = useState(\"\");\r\n  //const [, ,] = useState(\"\");\r\n\r\n  function onValueChanged(dateValue: ChangeEvent<HTMLInputElement>): void {\r\n    let [error, validClass, elementValue] = [\"\", \"\", dateValue];\r\n\r\n    [error, validClass] =\r\n      !elementValue && props.required\r\n        ? [\"Value cannot be empty\", \"is-invalid\"]\r\n        : [\"\", \"is-valid\"];\r\n\r\n    \r\n    props.onChange({\r\n      value: elementValue,\r\n      error: error,\r\n      touched: touched,\r\n      field: props.field,\r\n    });\r\n\r\n    setTouch(true);\r\n    setError(error);\r\n    setHtmlClass(validClass);\r\n    // setValue(elementValue);\r\n    //\r\n\r\n    //setStartDate(new Date(dateValue));\r\n  }\r\n\r\n  let selectedDate = null;\r\n  if(props.value !== undefined){\r\n    if(new Date(props.value).getUTCFullYear()  !==1) {\r\n      selectedDate =   new Date(props.value)\r\n    }\r\n  }\r\n  let fieldName = \"\";\r\n  if(props.name !== undefined){\r\n    fieldName  =props.name;\r\n  }\r\n  return (\r\n    <div>\r\n      <label htmlFor={props.id.toString()}>{props.label}</label>\r\n\r\n      <DatePicker\r\n        className={\"form-control\"}\r\n        selected={selectedDate}\r\n        isClearable\r\n        closeOnScroll={true}\r\n        placeholderText={props.placeholder}\r\n        name={props.name}\r\n        onChange={(date: any) => onValueChanged(date)}\r\n        onChangeRaw={(e)=>{e.preventDefault();}}\r\n      />\r\n\r\n      {error ? <div className=\"invalid-feedback\">{error}</div> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TextInput;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}