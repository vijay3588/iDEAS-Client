{"ast":null,"code":"import { ADD_DOCAPPROVAL, CHANGE_DOCAPPROVAL_PENDING_EDIT, EDIT_DOCAPPROVAL, REMOVE_DOCAPPROVAL, CLEAR_DOCAPPROVAL_PENDING_EDIT, SET_DOCAPPROVAL_MODIFICATION_STATE, CHANGE_DOCAPPROVAL_AMOUNT, LIST_DOCAPPROVAL } from \"../actions/docapproval.action\";\nimport { DocApprovalModificationStatus } from \"../models/docapproval.interface\";\nconst initialState = {\n  modificationState: DocApprovalModificationStatus.None,\n  selectedDocApproval: null,\n  docApprovals: []\n};\nfunction docApprovalReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case LIST_DOCAPPROVAL:\n      {\n        return {\n          ...state,\n          docApprovals: action.docApprovals\n        };\n      }\n    case ADD_DOCAPPROVAL:\n      {\n        //  let maxId: number = Math.max.apply(Math, state.docApproval.map(function(o) { return o._id; }));\n        //  action.product.id = maxId + 1;  \n        return {\n          ...state,\n          docApprovals: [...state.docApprovals, action.docRequest]\n        };\n      }\n    case EDIT_DOCAPPROVAL:\n      {\n        const foundIndex = state.docApprovals.findIndex(pr => pr._id === action.docApproval._id);\n        let docApproval = state.docApprovals;\n        docApproval[foundIndex] = action.docApproval;\n        return {\n          ...state,\n          docApprovals: docApproval\n        };\n      }\n    case REMOVE_DOCAPPROVAL:\n      {\n        return {\n          ...state,\n          docApprovals: state.docApprovals.filter(pr => pr._id !== action.id)\n        };\n      }\n    case CHANGE_DOCAPPROVAL_PENDING_EDIT:\n      {\n        return {\n          ...state,\n          selectedDocApproval: action.docApproval\n        };\n      }\n    case CLEAR_DOCAPPROVAL_PENDING_EDIT:\n      {\n        return {\n          ...state,\n          selectedDocApproval: null\n        };\n      }\n    case SET_DOCAPPROVAL_MODIFICATION_STATE:\n      {\n        return {\n          ...state,\n          modificationState: action.value\n        };\n      }\n    case CHANGE_DOCAPPROVAL_AMOUNT:\n      {\n        //const foundIndex: number = state.docApproval.findIndex(pr => pr._id === action.id);\n        let docApproval = state.docApprovals;\n        return {\n          ...state,\n          docApprovals: docApproval\n        };\n      }\n    default:\n      return state;\n  }\n}\nexport default docApprovalReducer;","map":{"version":3,"names":["ADD_DOCAPPROVAL","CHANGE_DOCAPPROVAL_PENDING_EDIT","EDIT_DOCAPPROVAL","REMOVE_DOCAPPROVAL","CLEAR_DOCAPPROVAL_PENDING_EDIT","SET_DOCAPPROVAL_MODIFICATION_STATE","CHANGE_DOCAPPROVAL_AMOUNT","LIST_DOCAPPROVAL","DocApprovalModificationStatus","initialState","modificationState","None","selectedDocApproval","docApprovals","docApprovalReducer","state","arguments","length","undefined","action","type","docRequest","foundIndex","findIndex","pr","_id","docApproval","filter","id","value"],"sources":["C:/iDAS/client/src/store/reducers/docapproval.reducer.ts"],"sourcesContent":["import { IDocApprovalState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_DOCAPPROVAL, CHANGE_DOCAPPROVAL_PENDING_EDIT, EDIT_DOCAPPROVAL, REMOVE_DOCAPPROVAL,\r\n    CLEAR_DOCAPPROVAL_PENDING_EDIT, SET_DOCAPPROVAL_MODIFICATION_STATE, CHANGE_DOCAPPROVAL_AMOUNT, LIST_DOCAPPROVAL} from \"../actions/docapproval.action\";\r\nimport { IDocApproval, DocApprovalModificationStatus } from \"../models/docapproval.interface\";\r\n\r\n\r\n\r\nconst initialState: IDocApprovalState = {\r\n    modificationState: DocApprovalModificationStatus.None,\r\n    selectedDocApproval: null,\r\n    docApprovals: []\r\n};\r\n\r\nfunction docApprovalReducer(state: IDocApprovalState = initialState, action: IActionBase): IDocApprovalState {\r\n    switch (action.type) {         \r\n        case LIST_DOCAPPROVAL: { \r\n            \r\n            return { ...state, docApprovals:  action.docApprovals};\r\n        }        \r\n        case ADD_DOCAPPROVAL: {\r\n          //  let maxId: number = Math.max.apply(Math, state.docApproval.map(function(o) { return o._id; }));\r\n          //  action.product.id = maxId + 1;  \r\n            return { ...state, docApprovals: [...state.docApprovals, action.docRequest]};\r\n        }\r\n        case EDIT_DOCAPPROVAL: {\r\n            const foundIndex: number = state.docApprovals.findIndex(pr => pr._id === action.docApproval._id);\r\n            let docApproval: IDocApproval[] = state.docApprovals;\r\n            docApproval[foundIndex] = action.docApproval;\r\n            return { ...state, docApprovals: docApproval };\r\n        }\r\n        case REMOVE_DOCAPPROVAL: {\r\n            return { ...state, docApprovals: state.docApprovals.filter(pr => pr._id !== action.id) };\r\n        }\r\n        case CHANGE_DOCAPPROVAL_PENDING_EDIT: {\r\n            return { ...state, selectedDocApproval: action.docApproval };\r\n        }\r\n        case CLEAR_DOCAPPROVAL_PENDING_EDIT: {\r\n            return { ...state, selectedDocApproval: null };\r\n        }\r\n        case SET_DOCAPPROVAL_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        case CHANGE_DOCAPPROVAL_AMOUNT: {\r\n            //const foundIndex: number = state.docApproval.findIndex(pr => pr._id === action.id);\r\n            let docApproval: IDocApproval[] = state.docApprovals;\r\n            return { ...state, docApprovals: docApproval };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default docApprovalReducer;"],"mappings":"AACA,SAASA,eAAe,EAAEC,+BAA+B,EAAEC,gBAAgB,EAAEC,kBAAkB,EAC3FC,8BAA8B,EAAEC,kCAAkC,EAAEC,yBAAyB,EAAEC,gBAAgB,QAAO,+BAA+B;AACzJ,SAAuBC,6BAA6B,QAAQ,iCAAiC;AAI7F,MAAMC,YAA+B,GAAG;EACpCC,iBAAiB,EAAEF,6BAA6B,CAACG,IAAI;EACrDC,mBAAmB,EAAE,IAAI;EACzBC,YAAY,EAAE;AAClB,CAAC;AAED,SAASC,kBAAkBA,CAAA,EAAkF;EAAA,IAAjFC,KAAwB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGP,YAAY;EAAA,IAAEU,MAAmB,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACpF,QAAQC,MAAM,CAACC,IAAI;IACf,KAAKb,gBAAgB;MAAE;QAEnB,OAAO;UAAE,GAAGQ,KAAK;UAAEF,YAAY,EAAGM,MAAM,CAACN;QAAY,CAAC;MAC1D;IACA,KAAKb,eAAe;MAAE;QACpB;QACA;QACE,OAAO;UAAE,GAAGe,KAAK;UAAEF,YAAY,EAAE,CAAC,GAAGE,KAAK,CAACF,YAAY,EAAEM,MAAM,CAACE,UAAU;QAAC,CAAC;MAChF;IACA,KAAKnB,gBAAgB;MAAE;QACnB,MAAMoB,UAAkB,GAAGP,KAAK,CAACF,YAAY,CAACU,SAAS,CAACC,EAAE,IAAIA,EAAE,CAACC,GAAG,KAAKN,MAAM,CAACO,WAAW,CAACD,GAAG,CAAC;QAChG,IAAIC,WAA2B,GAAGX,KAAK,CAACF,YAAY;QACpDa,WAAW,CAACJ,UAAU,CAAC,GAAGH,MAAM,CAACO,WAAW;QAC5C,OAAO;UAAE,GAAGX,KAAK;UAAEF,YAAY,EAAEa;QAAY,CAAC;MAClD;IACA,KAAKvB,kBAAkB;MAAE;QACrB,OAAO;UAAE,GAAGY,KAAK;UAAEF,YAAY,EAAEE,KAAK,CAACF,YAAY,CAACc,MAAM,CAACH,EAAE,IAAIA,EAAE,CAACC,GAAG,KAAKN,MAAM,CAACS,EAAE;QAAE,CAAC;MAC5F;IACA,KAAK3B,+BAA+B;MAAE;QAClC,OAAO;UAAE,GAAGc,KAAK;UAAEH,mBAAmB,EAAEO,MAAM,CAACO;QAAY,CAAC;MAChE;IACA,KAAKtB,8BAA8B;MAAE;QACjC,OAAO;UAAE,GAAGW,KAAK;UAAEH,mBAAmB,EAAE;QAAK,CAAC;MAClD;IACA,KAAKP,kCAAkC;MAAE;QACrC,OAAO;UAAE,GAAGU,KAAK;UAAEL,iBAAiB,EAAES,MAAM,CAACU;QAAM,CAAC;MACxD;IACA,KAAKvB,yBAAyB;MAAE;QAC5B;QACA,IAAIoB,WAA2B,GAAGX,KAAK,CAACF,YAAY;QACpD,OAAO;UAAE,GAAGE,KAAK;UAAEF,YAAY,EAAEa;QAAY,CAAC;MAClD;IACA;MACI,OAAOX,KAAK;EACpB;AACJ;AAGA,eAAeD,kBAAkB"},"metadata":{},"sourceType":"module"}