{"ast":null,"code":"import { ADD_PRODUCT, CHANGE_PRODUCT_PENDING_EDIT, EDIT_SUBMIT_PRODUCT, REMOVE_PRODUCT, CLEAR_PRODUCT_PENDING_EDIT, SET_PRODUCT_MODIFICATION_STATE, CHANGE_PRODUCT_AMOUNT, LIST_SUBMIT_PRODUCT, UPDATE_QR_CODE } from \"../actions/productsubmit.action\";\nimport { ProductModificationStatus } from \"../models/product.interface\";\nconst initialState = {\n  modificationState: ProductModificationStatus.None,\n  selectedForProductSubmit: null,\n  productSubmit: []\n};\nfunction productsReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case UPDATE_QR_CODE:\n      {\n        const foundIndex = state.productSubmit.findIndex(pr => pr._id === action.qrCodeFor);\n        let products = state.productSubmit;\n        products[foundIndex] = {\n          ...state.productSubmit[foundIndex],\n          ['qr_code']: action.qrCodeFor\n        };\n        return {\n          ...state,\n          productSubmit: products\n        };\n      }\n    case LIST_SUBMIT_PRODUCT:\n      {\n        return {\n          ...state,\n          productSubmit: action.productSubmit\n        };\n      }\n    case ADD_PRODUCT:\n      {\n        //  let maxId: number = Math.max.apply(Math, state.products.map(function(o) { return o._id; }));\n        //  action.product.id = maxId + 1;\n        return {\n          ...state,\n          productSubmit: [...state.productSubmit, action.product]\n        };\n      }\n    case EDIT_SUBMIT_PRODUCT:\n      {\n        const foundIndex = state.productSubmit.findIndex(pr => pr._id === action.product._id);\n        let products = state.productSubmit;\n        products[foundIndex] = action.product;\n        return {\n          ...state,\n          productSubmit: products\n        };\n      }\n    case REMOVE_PRODUCT:\n      {\n        return {\n          ...state,\n          productSubmit: state.productSubmit.filter(pr => pr._id !== action.id)\n        };\n      }\n    case CHANGE_PRODUCT_PENDING_EDIT:\n      {\n        return {\n          ...state,\n          selectedForProductSubmit: action.product\n        };\n      }\n    case CLEAR_PRODUCT_PENDING_EDIT:\n      {\n        return {\n          ...state,\n          selectedForProductSubmit: null\n        };\n      }\n    case SET_PRODUCT_MODIFICATION_STATE:\n      {\n        return {\n          ...state,\n          modificationState: action.value\n        };\n      }\n    case CHANGE_PRODUCT_AMOUNT:\n      {\n        // const foundIndex: number = state.products.findIndex(pr => pr._id === action.id);\n        let products = state.productSubmit;\n        return {\n          ...state,\n          productSubmit: products\n        };\n      }\n    default:\n      return state;\n  }\n}\nexport default productsReducer;","map":{"version":3,"names":["ADD_PRODUCT","CHANGE_PRODUCT_PENDING_EDIT","EDIT_SUBMIT_PRODUCT","REMOVE_PRODUCT","CLEAR_PRODUCT_PENDING_EDIT","SET_PRODUCT_MODIFICATION_STATE","CHANGE_PRODUCT_AMOUNT","LIST_SUBMIT_PRODUCT","UPDATE_QR_CODE","ProductModificationStatus","initialState","modificationState","None","selectedForProductSubmit","productSubmit","productsReducer","state","arguments","length","undefined","action","type","foundIndex","findIndex","pr","_id","qrCodeFor","products","product","filter","id","value"],"sources":["C:/iDASnew/client/src/store/reducers/productsubmit.reducer.ts"],"sourcesContent":["import { IProductSubmitState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_PRODUCT, CHANGE_PRODUCT_PENDING_EDIT, EDIT_SUBMIT_PRODUCT, REMOVE_PRODUCT,\r\n    CLEAR_PRODUCT_PENDING_EDIT, SET_PRODUCT_MODIFICATION_STATE, CHANGE_PRODUCT_AMOUNT, LIST_SUBMIT_PRODUCT, UPDATE_QR_CODE} from \"../actions/productsubmit.action\";\r\nimport { IProduct, ProductModificationStatus } from \"../models/product.interface\";\r\n\r\n\r\n\r\nconst initialState: IProductSubmitState = {\r\n    modificationState: ProductModificationStatus.None,\r\n    selectedForProductSubmit: null,\r\n    productSubmit: []\r\n};\r\n\r\nfunction productsReducer(state: IProductSubmitState = initialState, action: IActionBase): IProductSubmitState {\r\n    switch (action.type) {    \r\n        case UPDATE_QR_CODE:{ \r\n            const foundIndex: number = state.productSubmit.findIndex(pr => pr._id === action.qrCodeFor);\r\n            let products: IProduct[] = state.productSubmit;\r\n            products[foundIndex] = {...state.productSubmit[foundIndex], ['qr_code'] : action.qrCodeFor};\r\n            return { ...state, productSubmit: products };            \r\n        }  \r\n        case LIST_SUBMIT_PRODUCT: { \r\n            return { ...state, productSubmit:  action.productSubmit};\r\n        }        \r\n        case ADD_PRODUCT: {\r\n          //  let maxId: number = Math.max.apply(Math, state.products.map(function(o) { return o._id; }));\r\n          //  action.product.id = maxId + 1;\r\n            return { ...state, productSubmit: [...state.productSubmit, action.product]};\r\n        }\r\n        case EDIT_SUBMIT_PRODUCT: {\r\n            const foundIndex: number = state.productSubmit.findIndex(pr => pr._id === action.product._id);\r\n            let products: IProduct[] = state.productSubmit;\r\n            products[foundIndex] = action.product;\r\n            return { ...state, productSubmit: products };\r\n        }\r\n        case REMOVE_PRODUCT: {\r\n            return { ...state, productSubmit: state.productSubmit.filter(pr => pr._id !== action.id) };\r\n        }\r\n        case CHANGE_PRODUCT_PENDING_EDIT: {\r\n            return { ...state, selectedForProductSubmit: action.product };\r\n        }\r\n        case CLEAR_PRODUCT_PENDING_EDIT: {\r\n            return { ...state, selectedForProductSubmit: null };\r\n        }\r\n        case SET_PRODUCT_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        case CHANGE_PRODUCT_AMOUNT: {\r\n           // const foundIndex: number = state.products.findIndex(pr => pr._id === action.id);\r\n            let products: IProduct[] = state.productSubmit;\r\n            return { ...state, productSubmit: products };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default productsReducer;"],"mappings":"AACA,SAASA,WAAW,EAAEC,2BAA2B,EAAEC,mBAAmB,EAAEC,cAAc,EAClFC,0BAA0B,EAAEC,8BAA8B,EAAEC,qBAAqB,EAAEC,mBAAmB,EAAEC,cAAc,QAAO,iCAAiC;AAClK,SAAmBC,yBAAyB,QAAQ,6BAA6B;AAIjF,MAAMC,YAAiC,GAAG;EACtCC,iBAAiB,EAAEF,yBAAyB,CAACG,IAAI;EACjDC,wBAAwB,EAAE,IAAI;EAC9BC,aAAa,EAAE;AACnB,CAAC;AAED,SAASC,eAAeA,CAAA,EAAsF;EAAA,IAArFC,KAA0B,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGP,YAAY;EAAA,IAAEU,MAAmB,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACnF,QAAQC,MAAM,CAACC,IAAI;IACf,KAAKb,cAAc;MAAC;QAChB,MAAMc,UAAkB,GAAGN,KAAK,CAACF,aAAa,CAACS,SAAS,CAACC,EAAE,IAAIA,EAAE,CAACC,GAAG,KAAKL,MAAM,CAACM,SAAS,CAAC;QAC3F,IAAIC,QAAoB,GAAGX,KAAK,CAACF,aAAa;QAC9Ca,QAAQ,CAACL,UAAU,CAAC,GAAG;UAAC,GAAGN,KAAK,CAACF,aAAa,CAACQ,UAAU,CAAC;UAAE,CAAC,SAAS,GAAIF,MAAM,CAACM;QAAS,CAAC;QAC3F,OAAO;UAAE,GAAGV,KAAK;UAAEF,aAAa,EAAEa;QAAS,CAAC;MAChD;IACA,KAAKpB,mBAAmB;MAAE;QACtB,OAAO;UAAE,GAAGS,KAAK;UAAEF,aAAa,EAAGM,MAAM,CAACN;QAAa,CAAC;MAC5D;IACA,KAAKd,WAAW;MAAE;QAChB;QACA;QACE,OAAO;UAAE,GAAGgB,KAAK;UAAEF,aAAa,EAAE,CAAC,GAAGE,KAAK,CAACF,aAAa,EAAEM,MAAM,CAACQ,OAAO;QAAC,CAAC;MAC/E;IACA,KAAK1B,mBAAmB;MAAE;QACtB,MAAMoB,UAAkB,GAAGN,KAAK,CAACF,aAAa,CAACS,SAAS,CAACC,EAAE,IAAIA,EAAE,CAACC,GAAG,KAAKL,MAAM,CAACQ,OAAO,CAACH,GAAG,CAAC;QAC7F,IAAIE,QAAoB,GAAGX,KAAK,CAACF,aAAa;QAC9Ca,QAAQ,CAACL,UAAU,CAAC,GAAGF,MAAM,CAACQ,OAAO;QACrC,OAAO;UAAE,GAAGZ,KAAK;UAAEF,aAAa,EAAEa;QAAS,CAAC;MAChD;IACA,KAAKxB,cAAc;MAAE;QACjB,OAAO;UAAE,GAAGa,KAAK;UAAEF,aAAa,EAAEE,KAAK,CAACF,aAAa,CAACe,MAAM,CAACL,EAAE,IAAIA,EAAE,CAACC,GAAG,KAAKL,MAAM,CAACU,EAAE;QAAE,CAAC;MAC9F;IACA,KAAK7B,2BAA2B;MAAE;QAC9B,OAAO;UAAE,GAAGe,KAAK;UAAEH,wBAAwB,EAAEO,MAAM,CAACQ;QAAQ,CAAC;MACjE;IACA,KAAKxB,0BAA0B;MAAE;QAC7B,OAAO;UAAE,GAAGY,KAAK;UAAEH,wBAAwB,EAAE;QAAK,CAAC;MACvD;IACA,KAAKR,8BAA8B;MAAE;QACjC,OAAO;UAAE,GAAGW,KAAK;UAAEL,iBAAiB,EAAES,MAAM,CAACW;QAAM,CAAC;MACxD;IACA,KAAKzB,qBAAqB;MAAE;QACzB;QACC,IAAIqB,QAAoB,GAAGX,KAAK,CAACF,aAAa;QAC9C,OAAO;UAAE,GAAGE,KAAK;UAAEF,aAAa,EAAEa;QAAS,CAAC;MAChD;IACA;MACI,OAAOX,KAAK;EACpB;AACJ;AAGA,eAAeD,eAAe"},"metadata":{},"sourceType":"module"}